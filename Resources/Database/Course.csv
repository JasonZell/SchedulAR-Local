Department,Course Number,Course Name,Course Description
CS,128,Introduction to C++,"Basic concepts of computer software and programming. Data types, expressions, control structures, functions, file and stream I/O. Use of pointers and dynamic storage allocation. Structured and abstract data types. Problem-solving techniques."
CS,130,Discrete Structures,"Fundamental topics for Computer Science, such as logic, proof techniques, sets, basic counting rules, relations, functions and recursion, graphs and trees."
CS,140,Introduction to Computer Science,"Basic concepts of Computer Science, including hardware and software. Problem-solving methods. Programming in an object-oriented language."
CS,141,Intro to Programming & Problem Solving,"Design, implementation, documentation and testing of programs in an object-oriented language. Modularization and reusability of software. File I/O and exception handling."
CS,210,Computer Logic,"Boolean algebra with applications to computers and logic design. The Arithmetic Logical Unit, logical properties of flip-flops and sequential machines. Applied projects."
CS,240,Data Structures & Algorithms I,"Abstract data types and their implementations. Linked and array-based data structures. Lists, stacks, queues. Recursion. Hashing and searching. Analysis of algorithms."
CS,241,Data Structures & Algorithms II,"Trees, priority queues, graphs, sets, and maps. Sorting algorithms. Random access, indexed and direct files. Indexing techniques."
CS,256,C++ Programming,"Class encapsulation, inheritance, polymorphism, object storage management, and exception handling. Standard template library including template classes and generic algorithms. Software reuse and object-oriented programming."
CS,264,Computer Organization & Assmbly Programming,Von Neumann machine. Instruction set architecture. Addressing modes. Assembly programming. Arrays and records. Subroutines and macros. I/O and interrupts. Interfacing and communication.
CS,299,Spec Topics LD Students,"Group study of a selected topic, the title to be specified in advance."
CS,301,Numerical Methods,"Error analysis, zeros of a function, systems of linear equations, interpolation, Chebyshev approximation, least squares approximation, numerical integration and differentiation, random processes."
CS,311,Formal Languages and Automata,Introduction to language translation. Regular expressions. Finite automata. Lexical analysis. Context-free grammars and push down automata.
CS,331,Design & Analysis of Algorithms,"Algorithm design techniques including divide-and-conquer, the greedy method, dynamic programming, backtracking, and branch-and-bound. Tractability. Complexity analysis using basic asymptotic notation."
CS,352,Symbolic Programming,Languages for processing symbolic data with emphasis on applications in artificial intelligence.
CS,365,Computer Architecture,Data representations. Computer arithmetic. Data path and control unit design. Pipelining. Memory technology and hierarchy. I/O devices and interfacing. Multiprocessing and alternative architectures.
CS,370,Parallel Processing,"The taxonomy of concurrent and parallel systems. Communication and synchronization, multicomputer and multiprocessor systems. Shared memory and message passing programming paradigms; parallel problem solving."
CS,375,Computers and Society,"Impact of computers on individuals and on society. Various current uses of computers, how these have evolved, and what the future might bring. Benefits and dangers of information technology. How the Internet and computers have fundamentally changed the way we work, play, and interact with others. Consequent rise of new social and legal issues, making it essential for everyone to acquire a working understanding of the role of computers in our daily lives. Course fulfills GE Interdisciplinary Synthesis B5 or D4."
CS,380,Computer Networks,"Network architectures and standards. Layers and protocols. Circuit switching, packet switching and routing. Client-server concepts. Network security. Web computing. Privacy, intellectual property rights and acceptable use."
CS,408,Programming Languages,Concepts in programming languages. Virtual machines and abstraction. Syntax and semantics. Declarations and types. Scoping and binding. Data abstraction. Control abstraction. Run-time organization. Programming paradigms.
CS,420,Artificial Intelligence,"Overview of the different application areas of AI. Introduction to basic AI concepts and techniques such as heuristic search, knowledge representation, automated reasoning. In-depth discussion of several AI application areas: their specific problems, tools and techniques."
CS,431,Operating Systems,"Overview of operating systems. Operating system structures. Process management. Concurrency and synchronization. Deadlock. Processor management. Scheduling and dispatch. Memory management. Virtual memory. Device management. File systems. Security, privacy and acceptable use.
"
CS,435,Database Systems,"Database system fundamentals. System components and architecture. Data models, including Entity-Relationship model, relational model and object-oriented model. Theory of database design and data manipulation processes using relational algebra and calculus. SQL in programming language environments. Introduction to concurrency, security, recovery, and transaction handling."
CS,445,Computer Graphics,Basic concepts in 2D and 3D graphics. Graphics hardware. Drawing concepts in 2D and 3D graphics. Geometric transformations. Windowing and clipping algorithms. Simple hidden line and surface removal. Color models and applications. 3D modeling. Animation. OpenGL libraries.
CS,450,Computability,"Abstract models of computation, including Turing machines. Church- Turing thesis. Decidability. Theoretical and practical capabilities and limitations of computing machines."
CS,463,Undergraduate Seminar,Technical presentations by students on current developments in computer science. Essays on seminar topics.
CS,470,Game Development,"Overview of game development processes. Game programming topics including: languages and architectures, mathematics, collision detection, physics, graphics, animation, artificial intelligence (AI), and audio."
CS,480,Software Engineering,"Models of the software development process and metrics. Software requirements and specifications. Methodologies, tools and environments. Human-computer interaction. Software design and architecture. Project management. Cost estimation. Testing and validation. Maintenance and evolution."
CS,525,Advanced Computer Architecture,"Architecture and organization of high performance computers. Principles of instruction sets. Pipelining, instruction level parallelism and multiprocessor. Memory, storage, and interconnection. Quantitative analysis and evaluation of design alternatives. Historical developments. Architectural tradeoffs and innovations."